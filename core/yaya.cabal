name:                yaya
version:             0.2.1.2
synopsis:            Total recursion schemes.
description:         Recursion schemes allow you to separate recursion from your
                     business logic â€“ making your own operations simpler, more
                     modular, and less error-prone. This library also provides
                     tools for combining your operations in ways that reduce the
                     number of passes over your data and is designed to
                     encourage total (i.e., successfully terminating) functions.
homepage:            https://github.com/sellout/yaya#readme
author:              Greg Pfeil
maintainer:          greg@technomadic.org
copyright:           2017 Greg Pfeil
license:             AGPL-3
license-file:        LICENSE
category:            Recursion
build-type:          Simple
extra-source-files:  CHANGELOG.md
                   , README.md
cabal-version:       >=1.10

library
  hs-source-dirs:      src
  exposed-modules:     Yaya.Pattern
                     , Yaya.Fold
                     , Yaya.Fold.Common
                     , Yaya.Fold.Native
                     , Yaya.Functor
                     , Yaya.Retrofit
                     , Yaya.Applied
                     , Yaya.Zoo
                     , Yaya.Experimental.Foldable
  build-depends:       base >= 4.7 && < 5
                     , bifunctors
                     , comonad
                     , constraints
                     , containers
                     , distributive
                     , either
                     , errors
                     , free
                     , kan-extensions
                     , lens
                     , profunctors
                     , template-haskell
                     , transformers
  default-extensions:  ConstraintKinds
                     , DeriveTraversable
                     , FlexibleContexts
                     , FlexibleInstances
                     , FunctionalDependencies
                     , LambdaCase
                     , MultiParamTypeClasses
                     , PolyKinds
                     , RankNTypes
                     , ScopedTypeVariables
                     , TupleSections
  default-language:    Haskell2010

source-repository head
  type:     git
  location: https://github.com/sellout/yaya
