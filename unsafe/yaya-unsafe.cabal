cabal-version:  3.0

name:        yaya-unsafe
version:     0.3.2.0
synopsis:    Non-total extensions to the Yaya recursion scheme library.
description: Yaya is designed as a _total_ library. However, it is often
             expedient to use partial operations in some cases, and this package
             extends Yaya to provide those operations. It’s in a separate
             package (and modules) in order to make sure its use is very
             intentional and also relatively obvious to those reading your code.
             It’s recommended that you import these modules qualified and, in
             particular, all the type class instances here have been pulled into
             a separate module to avoid accidentally bringing them into scope.
author:      Greg Pfeil <greg@technomadic.org>
maintainer:  Greg Pfeil <greg@technomadic.org>
copyright:   2017 Greg Pfeil
homepage:    https://github.com/sellout/yaya#readme
bug-reports: https://github.com/sellout/yaya/issues
category:    Recursion
build-type:  Custom
license:     AGPL-3.0-or-later
license-files:
  LICENSE
extra-source-files:
  CHANGELOG.md
  README.md
tested-with:
  GHC == {
--  GHCup   Nixpkgs
    8.6.1,
    8.8.1,  8.8.4,
    8.10.1,
    9.0.1,
    9.2.1,
    9.4.1,  9.4.8,
    9.6.1,
            9.8.1
  }

source-repository head
  type: git
  location: https://github.com/sellout/yaya

-- This mimics the GHC2021 extension
-- (https://ghc.gitlab.haskell.org/ghc/doc/users_guide/exts/control.html?highlight=doandifthenelse#extension-GHC2021),
-- but supporting compilers back to GHC 7.10. If the oldest supported compiler
-- is GHC 9.2, then this stanza can be removed and `import: GHC2021` can be
-- replaced by `default-language: GHC2021`.
common GHC2021
  default-language: Haskell2010
  default-extensions:
    BangPatterns
    BinaryLiterals
    ConstraintKinds
    DeriveDataTypeable
    DeriveGeneric
    -- DeriveLift -- uncomment if the oldest supported version is GHC 8.10.1+
    DeriveTraversable
    DerivingStrategies
    DoAndIfThenElse
    EmptyCase
    ExistentialQuantification
    FlexibleContexts
    FlexibleInstances
    GADTSyntax
    GeneralizedNewtypeDeriving
    HexFloatLiterals
    -- ImportQualifiedPost -- uncomment if the oldest supported version is GHC 8.10.1+
    InstanceSigs
    LambdaCase
    MagicHash
    MonadComprehensions
    MonomorphismRestriction
    MultiParamTypeClasses
    NamedFieldPuns
    NamedWildCards
    NumericUnderscores
    PolyKinds
    PostfixOperators
    RankNTypes
    ScopedTypeVariables
    StandaloneDeriving
    -- StandaloneKindSignatures -- uncomment if the oldest supported version is GHC 8.10.1+
    TupleSections
    TypeApplications
    TypeOperators
    UnicodeSyntax
    NoExplicitNamespaces

common defaults
  import: GHC2021
  build-depends:
    base ^>= {4.12.0, 4.13.0, 4.14.0, 4.15.0, 4.16.0, 4.17.0, 4.18.0, 4.19.0},
  ghc-options:
    -Wall
    -Wtrustworthy-safe
    -fpackage-trust
  if impl(ghc >= 8.10.1)
    ghc-options:
      -Wmissing-safe-haskell-mode
  default-extensions:
    DefaultSignatures
    ExplicitNamespaces
    FunctionalDependencies
    LiberalTypeSynonyms
    -- replace with `LexicalNegation` if the oldest supported version is GHC 9.0.1+
    NegativeLiterals
    PackageImports
    ParallelListComp
    -- QualifiedDo - uncomment if the oldest supported version is GHC 9.0.1+
    RecursiveDo
    -- RequiredTypeArguments - uncomment if the oldest supported version is GHC 9.10.1+
    StrictData
    TemplateHaskellQuotes
    TransformListComp
    NoGeneralizedNewtypeDeriving
    NoImplicitPrelude
    NoMonomorphismRestriction
    NoPatternGuards
    NoTypeApplications

custom-setup
  setup-depends:
    base ^>= {4.12.0, 4.13.0, 4.14.0, 4.15.0, 4.16.0, 4.17.0, 4.18.0, 4.19.0},
    cabal-doctest ^>= 1.0.0

library
  import: defaults
  hs-source-dirs:
    src
  exposed-modules:
    Yaya.Unsafe.Applied
    Yaya.Unsafe.Fold
    Yaya.Unsafe.Fold.Instances
    Yaya.Unsafe.Zoo
  build-depends:
    bifunctors,
    comonad,
    free,
    lens,
    yaya >= 0.5.1,
  ghc-options:
    -trust adjunctions
    -trust array
    -trust base
    -trust base-orphans
    -trust binary
    -trust bytestring
    -trust containers
    -trust distributive
    -trust exceptions
    -trust foldable1-classes-compat
    -trust ghc-prim
    -trust lens
    -trust profunctors
    -trust semigroupoids
    -trust stm
    -trust text
    -trust transformers-compat

test-suite doctests
  import: defaults
  type: exitcode-stdio-1.0
  hs-source-dirs: tests
  main-is: doctests.hs
  ghc-options:
    -trust base
  build-depends:
    doctest ^>= {0.15.0, 0.16.0, 0.17.0, 0.18.0, 0.19.0, 0.20.0, 0.21.0, 0.22.0},
    yaya-unsafe,
  default-extensions:
    -- TODO: Other flags require each module to be compiled with a safety level.
    --       Since it’s currently not possible to add `{-# LANGUAGE Safe -#}` to
    --       the generated “Build_doctests.hs” and since doctests.hs is
    --       `Unsafe`, this is the only safety level that can be used.
    Unsafe
